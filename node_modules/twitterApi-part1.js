const https = require('https');
const twitterCreds = require('./creds');
console.log(twitterCreds);

module.exports.getTwitterData = function(callback) {
    let joined = `${twitterCreds.consumerKey}:${twitterCreds.consumerSecret}`;
    let encoded = new Buffer(joined).toString('base64');
    var bearerToken;
    var twitterData = {};

    getToken(getTweetData);

    //making a reqest for a Bearertoken utilizing user twittercreds
    //calling the callback with the bearerToken
    function getToken(callback) {
        var tokenReq = https.request({
            method: 'POST',
            host: 'api.twitter.com',
            path: '/oauth2/token',
            headers: {
                'Authorization': `Basic ${encoded}`,
                'Content-Type': `application/x-www-form-urlencoded;charset=UTF-8`
            }
        }, function(response) {
            var str = '';
            console.log(response.statusCode);
            response.on('data', function (chunk) {
                str += chunk;
            });
            response.on('end', function () {
                try {
                    bearerToken = JSON.parse(str).access_token;
                } catch(err) {
                    console.log(err);
                }
                console.log(bearerToken);
                callback(bearerToken);
            });
        });

        tokenReq.write('grant_type=client_credentials');
        tokenReq.end();
    }

    //utilizing the token data provided to gather the tweets from the requested site
    function getTweetData(token) {
        console.log(token);
        var twitterDataReq = https.request({
            method: 'GET',
            host: 'api.twitter.com',
            path: '/1.1/statuses/user_timeline.json?screen_name=BoF&count=20',
            headers: {
                'Authorization': `Bearer ${token}`,
            }
        }, function(response){
            response.on('error', function(err) {
                console.log(err);
            });
            var str = '';
            //console.log(response.statusCode);
            response.on('data', function (chunk) {
                str += chunk;
            });
            response.on('end', function () {
                //console.log(str);
                twitterData = JSON.parse(str);
                console.log(twitterData);
                callback(null, processTweetData(twitterData));
            });
        });
        twitterDataReq.end();
    }


    //validating data from twitter has at least 1 url, taking first url and pushing data to json
    function processTweetData(data) {
        var twitterTextUrlData = [];
        data.forEach(function(tweet) {
            if(tweet.entities.urls[0]) {
                if(tweet.entities.urls[0].expanded_url) {
                    console.log(tweet.entities.urls[0].expanded_url, tweet.text);
                    twitterTextUrlData.push({
                        "text": tweet.text,
                        "url": tweet.entities.urls[0].expanded_url
                    });
                }
            }
        });
        return twitterTextUrlData;
    }

};
